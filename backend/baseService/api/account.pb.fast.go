// Code generated by Fastpb v0.0.2. DO NOT EDIT.

package api

import (
	validate "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	fmt "fmt"
	fastpb "github.com/cloudwego/fastpb"
)

var (
	_ = fmt.Errorf
	_ = fastpb.Skip
)

func (x *RegisterRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_RegisterRequest[number], err)
}

func (x *RegisterRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Mobile, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *RegisterRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Email, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *RegisterRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.Password, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *RegisterResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_RegisterResponse[number], err)
}

func (x *RegisterResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	var v Metadata
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Meta = &v
	return offset, nil
}

func (x *RegisterResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.AccountId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *CheckAccountRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 4:
		offset, err = x.fastReadField4(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_CheckAccountRequest[number], err)
}

func (x *CheckAccountRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Mobile, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *CheckAccountRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Email, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *CheckAccountRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.AccountId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *CheckAccountRequest) fastReadField4(buf []byte, _type int8) (offset int, err error) {
	x.Password, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *CheckAccountResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_CheckAccountResponse[number], err)
}

func (x *CheckAccountResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	var v Metadata
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Meta = &v
	return offset, nil
}

func (x *CheckAccountResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.AccountId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *BindRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_BindRequest[number], err)
}

func (x *BindRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.AccountId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *BindRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	var v int32
	v, offset, err = fastpb.ReadInt32(buf, _type)
	if err != nil {
		return offset, err
	}
	x.VoucherType = VoucherType(v)
	return offset, nil
}

func (x *BindRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.Voucher, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *BindResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_BindResponse[number], err)
}

func (x *BindResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	var v Metadata
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Meta = &v
	return offset, nil
}

func (x *UnbindRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 3:
		offset, err = x.fastReadField3(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_UnbindRequest[number], err)
}

func (x *UnbindRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.AccountId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *UnbindRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	var v int32
	v, offset, err = fastpb.ReadInt32(buf, _type)
	if err != nil {
		return offset, err
	}
	x.VoucherType = VoucherType(v)
	return offset, nil
}

func (x *UnbindRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
	x.Voucher, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *UnbindResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_UnbindResponse[number], err)
}

func (x *UnbindResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	var v Metadata
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Meta = &v
	return offset, nil
}

func (x *RegisterRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	return offset
}

func (x *RegisterRequest) fastWriteField1(buf []byte) (offset int) {
	if x.Mobile == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetMobile())
	return offset
}

func (x *RegisterRequest) fastWriteField2(buf []byte) (offset int) {
	if x.Email == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetEmail())
	return offset
}

func (x *RegisterRequest) fastWriteField3(buf []byte) (offset int) {
	if x.Password == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetPassword())
	return offset
}

func (x *RegisterResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *RegisterResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Meta == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 1, x.GetMeta())
	return offset
}

func (x *RegisterResponse) fastWriteField2(buf []byte) (offset int) {
	if x.AccountId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 2, x.GetAccountId())
	return offset
}

func (x *CheckAccountRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	offset += x.fastWriteField4(buf[offset:])
	return offset
}

func (x *CheckAccountRequest) fastWriteField1(buf []byte) (offset int) {
	if x.Mobile == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 1, x.GetMobile())
	return offset
}

func (x *CheckAccountRequest) fastWriteField2(buf []byte) (offset int) {
	if x.Email == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetEmail())
	return offset
}

func (x *CheckAccountRequest) fastWriteField3(buf []byte) (offset int) {
	if x.AccountId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 3, x.GetAccountId())
	return offset
}

func (x *CheckAccountRequest) fastWriteField4(buf []byte) (offset int) {
	if x.Password == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 4, x.GetPassword())
	return offset
}

func (x *CheckAccountResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *CheckAccountResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Meta == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 1, x.GetMeta())
	return offset
}

func (x *CheckAccountResponse) fastWriteField2(buf []byte) (offset int) {
	if x.AccountId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 2, x.GetAccountId())
	return offset
}

func (x *BindRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	return offset
}

func (x *BindRequest) fastWriteField1(buf []byte) (offset int) {
	if x.AccountId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 1, x.GetAccountId())
	return offset
}

func (x *BindRequest) fastWriteField2(buf []byte) (offset int) {
	if x.VoucherType == 0 {
		return offset
	}
	offset += fastpb.WriteInt32(buf[offset:], 2, int32(x.GetVoucherType()))
	return offset
}

func (x *BindRequest) fastWriteField3(buf []byte) (offset int) {
	if x.Voucher == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetVoucher())
	return offset
}

func (x *BindResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	return offset
}

func (x *BindResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Meta == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 1, x.GetMeta())
	return offset
}

func (x *UnbindRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	offset += x.fastWriteField3(buf[offset:])
	return offset
}

func (x *UnbindRequest) fastWriteField1(buf []byte) (offset int) {
	if x.AccountId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 1, x.GetAccountId())
	return offset
}

func (x *UnbindRequest) fastWriteField2(buf []byte) (offset int) {
	if x.VoucherType == 0 {
		return offset
	}
	offset += fastpb.WriteInt32(buf[offset:], 2, int32(x.GetVoucherType()))
	return offset
}

func (x *UnbindRequest) fastWriteField3(buf []byte) (offset int) {
	if x.Voucher == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 3, x.GetVoucher())
	return offset
}

func (x *UnbindResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	return offset
}

func (x *UnbindResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Meta == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 1, x.GetMeta())
	return offset
}

func (x *RegisterRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	return n
}

func (x *RegisterRequest) sizeField1() (n int) {
	if x.Mobile == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetMobile())
	return n
}

func (x *RegisterRequest) sizeField2() (n int) {
	if x.Email == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetEmail())
	return n
}

func (x *RegisterRequest) sizeField3() (n int) {
	if x.Password == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetPassword())
	return n
}

func (x *RegisterResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *RegisterResponse) sizeField1() (n int) {
	if x.Meta == nil {
		return n
	}
	n += fastpb.SizeMessage(1, x.GetMeta())
	return n
}

func (x *RegisterResponse) sizeField2() (n int) {
	if x.AccountId == 0 {
		return n
	}
	n += fastpb.SizeInt64(2, x.GetAccountId())
	return n
}

func (x *CheckAccountRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	n += x.sizeField4()
	return n
}

func (x *CheckAccountRequest) sizeField1() (n int) {
	if x.Mobile == "" {
		return n
	}
	n += fastpb.SizeString(1, x.GetMobile())
	return n
}

func (x *CheckAccountRequest) sizeField2() (n int) {
	if x.Email == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetEmail())
	return n
}

func (x *CheckAccountRequest) sizeField3() (n int) {
	if x.AccountId == 0 {
		return n
	}
	n += fastpb.SizeInt64(3, x.GetAccountId())
	return n
}

func (x *CheckAccountRequest) sizeField4() (n int) {
	if x.Password == "" {
		return n
	}
	n += fastpb.SizeString(4, x.GetPassword())
	return n
}

func (x *CheckAccountResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *CheckAccountResponse) sizeField1() (n int) {
	if x.Meta == nil {
		return n
	}
	n += fastpb.SizeMessage(1, x.GetMeta())
	return n
}

func (x *CheckAccountResponse) sizeField2() (n int) {
	if x.AccountId == 0 {
		return n
	}
	n += fastpb.SizeInt64(2, x.GetAccountId())
	return n
}

func (x *BindRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	return n
}

func (x *BindRequest) sizeField1() (n int) {
	if x.AccountId == 0 {
		return n
	}
	n += fastpb.SizeInt64(1, x.GetAccountId())
	return n
}

func (x *BindRequest) sizeField2() (n int) {
	if x.VoucherType == 0 {
		return n
	}
	n += fastpb.SizeInt32(2, int32(x.GetVoucherType()))
	return n
}

func (x *BindRequest) sizeField3() (n int) {
	if x.Voucher == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetVoucher())
	return n
}

func (x *BindResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	return n
}

func (x *BindResponse) sizeField1() (n int) {
	if x.Meta == nil {
		return n
	}
	n += fastpb.SizeMessage(1, x.GetMeta())
	return n
}

func (x *UnbindRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	n += x.sizeField3()
	return n
}

func (x *UnbindRequest) sizeField1() (n int) {
	if x.AccountId == 0 {
		return n
	}
	n += fastpb.SizeInt64(1, x.GetAccountId())
	return n
}

func (x *UnbindRequest) sizeField2() (n int) {
	if x.VoucherType == 0 {
		return n
	}
	n += fastpb.SizeInt32(2, int32(x.GetVoucherType()))
	return n
}

func (x *UnbindRequest) sizeField3() (n int) {
	if x.Voucher == "" {
		return n
	}
	n += fastpb.SizeString(3, x.GetVoucher())
	return n
}

func (x *UnbindResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	return n
}

func (x *UnbindResponse) sizeField1() (n int) {
	if x.Meta == nil {
		return n
	}
	n += fastpb.SizeMessage(1, x.GetMeta())
	return n
}

var fieldIDToName_RegisterRequest = map[int32]string{
	1: "Mobile",
	2: "Email",
	3: "Password",
}

var fieldIDToName_RegisterResponse = map[int32]string{
	1: "Meta",
	2: "AccountId",
}

var fieldIDToName_CheckAccountRequest = map[int32]string{
	1: "Mobile",
	2: "Email",
	3: "AccountId",
	4: "Password",
}

var fieldIDToName_CheckAccountResponse = map[int32]string{
	1: "Meta",
	2: "AccountId",
}

var fieldIDToName_BindRequest = map[int32]string{
	1: "AccountId",
	2: "VoucherType",
	3: "Voucher",
}

var fieldIDToName_BindResponse = map[int32]string{
	1: "Meta",
}

var fieldIDToName_UnbindRequest = map[int32]string{
	1: "AccountId",
	2: "VoucherType",
	3: "Voucher",
}

var fieldIDToName_UnbindResponse = map[int32]string{
	1: "Meta",
}

var _ = validate.File_buf_validate_validate_proto
