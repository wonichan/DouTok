// Code generated by Fastpb v0.0.2. DO NOT EDIT.

package api

import (
	fmt "fmt"
	fastpb "github.com/cloudwego/fastpb"
)

var (
	_ = fmt.Errorf
	_ = fastpb.Skip
)

func (x *CreateVerificationCodeRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_CreateVerificationCodeRequest[number], err)
}

func (x *CreateVerificationCodeRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.Bits, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *CreateVerificationCodeRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.ExpireTime, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *CreateVerificationCodeResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_CreateVerificationCodeResponse[number], err)
}

func (x *CreateVerificationCodeResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	var v Metadata
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Meta = &v
	return offset, nil
}

func (x *CreateVerificationCodeResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.VerificationCodeId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *ValidateVerificationCodeRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	case 2:
		offset, err = x.fastReadField2(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ValidateVerificationCodeRequest[number], err)
}

func (x *ValidateVerificationCodeRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	x.VerificationCodeId, offset, err = fastpb.ReadInt64(buf, _type)
	return offset, err
}

func (x *ValidateVerificationCodeRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
	x.Code, offset, err = fastpb.ReadString(buf, _type)
	return offset, err
}

func (x *ValidateVerificationCodeResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
	switch number {
	case 1:
		offset, err = x.fastReadField1(buf, _type)
		if err != nil {
			goto ReadFieldError
		}
	default:
		offset, err = fastpb.Skip(buf, _type, number)
		if err != nil {
			goto SkipFieldError
		}
	}
	return offset, nil
SkipFieldError:
	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
ReadFieldError:
	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_ValidateVerificationCodeResponse[number], err)
}

func (x *ValidateVerificationCodeResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
	var v Metadata
	offset, err = fastpb.ReadMessage(buf, _type, &v)
	if err != nil {
		return offset, err
	}
	x.Meta = &v
	return offset, nil
}

func (x *CreateVerificationCodeRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *CreateVerificationCodeRequest) fastWriteField1(buf []byte) (offset int) {
	if x.Bits == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 1, x.GetBits())
	return offset
}

func (x *CreateVerificationCodeRequest) fastWriteField2(buf []byte) (offset int) {
	if x.ExpireTime == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 2, x.GetExpireTime())
	return offset
}

func (x *CreateVerificationCodeResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *CreateVerificationCodeResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Meta == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 1, x.GetMeta())
	return offset
}

func (x *CreateVerificationCodeResponse) fastWriteField2(buf []byte) (offset int) {
	if x.VerificationCodeId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 2, x.GetVerificationCodeId())
	return offset
}

func (x *ValidateVerificationCodeRequest) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	offset += x.fastWriteField2(buf[offset:])
	return offset
}

func (x *ValidateVerificationCodeRequest) fastWriteField1(buf []byte) (offset int) {
	if x.VerificationCodeId == 0 {
		return offset
	}
	offset += fastpb.WriteInt64(buf[offset:], 1, x.GetVerificationCodeId())
	return offset
}

func (x *ValidateVerificationCodeRequest) fastWriteField2(buf []byte) (offset int) {
	if x.Code == "" {
		return offset
	}
	offset += fastpb.WriteString(buf[offset:], 2, x.GetCode())
	return offset
}

func (x *ValidateVerificationCodeResponse) FastWrite(buf []byte) (offset int) {
	if x == nil {
		return offset
	}
	offset += x.fastWriteField1(buf[offset:])
	return offset
}

func (x *ValidateVerificationCodeResponse) fastWriteField1(buf []byte) (offset int) {
	if x.Meta == nil {
		return offset
	}
	offset += fastpb.WriteMessage(buf[offset:], 1, x.GetMeta())
	return offset
}

func (x *CreateVerificationCodeRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *CreateVerificationCodeRequest) sizeField1() (n int) {
	if x.Bits == 0 {
		return n
	}
	n += fastpb.SizeInt64(1, x.GetBits())
	return n
}

func (x *CreateVerificationCodeRequest) sizeField2() (n int) {
	if x.ExpireTime == 0 {
		return n
	}
	n += fastpb.SizeInt64(2, x.GetExpireTime())
	return n
}

func (x *CreateVerificationCodeResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *CreateVerificationCodeResponse) sizeField1() (n int) {
	if x.Meta == nil {
		return n
	}
	n += fastpb.SizeMessage(1, x.GetMeta())
	return n
}

func (x *CreateVerificationCodeResponse) sizeField2() (n int) {
	if x.VerificationCodeId == 0 {
		return n
	}
	n += fastpb.SizeInt64(2, x.GetVerificationCodeId())
	return n
}

func (x *ValidateVerificationCodeRequest) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	n += x.sizeField2()
	return n
}

func (x *ValidateVerificationCodeRequest) sizeField1() (n int) {
	if x.VerificationCodeId == 0 {
		return n
	}
	n += fastpb.SizeInt64(1, x.GetVerificationCodeId())
	return n
}

func (x *ValidateVerificationCodeRequest) sizeField2() (n int) {
	if x.Code == "" {
		return n
	}
	n += fastpb.SizeString(2, x.GetCode())
	return n
}

func (x *ValidateVerificationCodeResponse) Size() (n int) {
	if x == nil {
		return n
	}
	n += x.sizeField1()
	return n
}

func (x *ValidateVerificationCodeResponse) sizeField1() (n int) {
	if x.Meta == nil {
		return n
	}
	n += fastpb.SizeMessage(1, x.GetMeta())
	return n
}

var fieldIDToName_CreateVerificationCodeRequest = map[int32]string{
	1: "Bits",
	2: "ExpireTime",
}

var fieldIDToName_CreateVerificationCodeResponse = map[int32]string{
	1: "Meta",
	2: "VerificationCodeId",
}

var fieldIDToName_ValidateVerificationCodeRequest = map[int32]string{
	1: "VerificationCodeId",
	2: "Code",
}

var fieldIDToName_ValidateVerificationCodeResponse = map[int32]string{
	1: "Meta",
}
